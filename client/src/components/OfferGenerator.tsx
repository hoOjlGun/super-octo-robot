import { useState } from "react";
import { Sparkles, Copy, RefreshCw } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { useToast } from "@/hooks/use-toast";

export default function OfferGenerator() {
  const [niche, setNiche] = useState("");
  const [tone, setTone] = useState("professional");
  const [offer, setOffer] = useState("");
  const { toast } = useToast();

  const generateOffer = () => {
    const offers = {
      professional: `üéØ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è ${niche || "–≤–∞—à–µ–π –Ω–∏—à–∏"}

–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç,

–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è ${niche || "–≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞"}. –ù–∞—à –æ–ø—ã—Ç –∏ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

‚úì –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
‚úì –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞
‚úì –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7

–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!`,
      casual: `üëã –ü—Ä–∏–≤–µ—Ç!

–•–æ—á–µ—à—å –∫—Ä—É—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è ${niche || "—Ç–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"}? –ú—ã –∑–Ω–∞–µ–º, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ!

üí™ –ë—ã—Å—Ç—Ä–æ, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤
üöÄ –ù–∞—á–Ω–∏ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è
üòé –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω

–ñ–º–∏ —Å—é–¥–∞ –∏ –ø–æ–ª—É—á–∏ —Å–≤–æ–π –æ—Ñ—Ñ–µ—Ä!`,
      aggressive: `üî• –°–†–û–ß–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï! ${niche || "–¢–û–õ–¨–ö–û –°–ï–ô–ß–ê–°!"}

‚ö° –£–°–ü–ï–ô –í–û–°–ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø! ‚ö°

–ù–µ —É–ø—É—Å—Ç–∏ —à–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ô —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ${niche || "—Ç–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞"}!

‚úÖ –û–ì–†–ê–ù–ò–ß–ï–ù–ù–û–ï –í–†–ï–ú–Ø
‚úÖ –≠–ö–°–ö–õ–Æ–ó–ò–í–ù–´–ï –£–°–õ–û–í–ò–Ø
‚úÖ –ì–ê–†–ê–ù–¢–ò–Ø 100%

–î–ï–ô–°–¢–í–£–ô –°–ï–ô–ß–ê–°! ‚è∞`,
    };

    setOffer(offers[tone as keyof typeof offers]);
  };

  const copyToClipboard = () => {
    navigator.clipboard.writeText(offer);
    toast({
      title: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!",
      description: "–û—Ñ—Ñ–µ—Ä —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞",
    });
  };

  return (
    <div className="grid lg:grid-cols-2 gap-6 h-full">
      <div className="bg-card rounded-lg border border-card-border p-6">
        <div className="flex items-center gap-2 mb-6">
          <Sparkles className="w-5 h-5 text-primary" />
          <h2 className="font-semibold text-card-foreground">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ñ—Ñ–µ—Ä–∞</h2>
        </div>

        <div className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="niche">–ù–∏—à–∞ / –¢–µ–º–∞—Ç–∏–∫–∞</Label>
            <Input
              id="niche"
              value={niche}
              onChange={(e) => setNiche(e.target.value)}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω"
              data-testid="input-niche"
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="tone">–¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å</Label>
            <Select value={tone} onValueChange={setTone}>
              <SelectTrigger id="tone" data-testid="select-tone">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="professional">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è</SelectItem>
                <SelectItem value="casual">–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–∞—è</SelectItem>
                <SelectItem value="aggressive">–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <Button
            onClick={generateOffer}
            className="w-full"
            data-testid="button-generate"
          >
            <Sparkles className="w-4 h-4 mr-2" />
            –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ñ—Ñ–µ—Ä
          </Button>
        </div>
      </div>

      <div className="bg-card rounded-lg border border-card-border p-6">
        <div className="flex items-center justify-between mb-6">
          <h2 className="font-semibold text-card-foreground">–†–µ–∑—É–ª—å—Ç–∞—Ç</h2>
          <div className="flex gap-2">
            <Button
              variant="outline"
              size="sm"
              onClick={copyToClipboard}
              disabled={!offer}
              data-testid="button-copy"
            >
              <Copy className="w-4 h-4" />
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={generateOffer}
              disabled={!offer}
              data-testid="button-regenerate"
            >
              <RefreshCw className="w-4 h-4" />
            </Button>
          </div>
        </div>

        <Textarea
          value={offer}
          readOnly
          className="min-h-[300px] font-sans"
          placeholder="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ñ—Ñ–µ—Ä –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å..."
          data-testid="textarea-offer"
        />
      </div>
    </div>
  );
}
